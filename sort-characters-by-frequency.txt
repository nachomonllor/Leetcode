
https://leetcode.com/problems/sort-characters-by-frequency/


using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.Linq;

namespace ConsoleApp1
{
    class Program
    {


	public string FrequencySort(string s)
        {
            int N = 256;

            int[] frec = new int[N];

            for (int i = 0; i < s.Length; i++)
            {
                frec[s[i] - '0']++;
            }

            string[] lugares = new string[s.Length];

            for (int i = 0; i < N; i++)
            {
                if (frec[i] > 0) lugares[frec[i] - 1] += (char)(i+'0');
            }


            StringBuilder ans = new StringBuilder();

            foreach (string item in lugares)
            {
                if (!string.IsNullOrEmpty(item))
                {
                    foreach (char ch in item)
                    {
                        ans.Append(new string(ch, frec[ch - '0']));
                    }
                }
            }

            char[] chars = ans.ToString().ToCharArray();

            Array.Reverse(chars);

            return new string(chars);
        }


        public static string FrequencySort(string s)
        {

            int[] frec = new int[26];

            for (int i = 0; i < s.Length; i++)
            {
                frec[s[i] - 'a']++;
            }

            Dictionary<char, int> dic = new Dictionary<char, int>();

            for (int i = 0; i < 26; i++)
            {
                dic[(char)(i + 'a')] = frec[i];
            }


            char[] keys = dic.Keys.ToArray();
            int[] values = dic.Values.ToArray();


            OrdenarArraysParalelos(keys, values);

            string concat = "";
            // for (int i = 0; i < keys.Length; i++)
            for (int i = keys.Length - 1; i >= 0; i--)
            {
                if (values[i] > 0)
                {
                    //Console.WriteLine(keys[i] + " " + values[i]);
                    concat += new string(keys[i], values[i]);
                }
            }



            return concat;



        }


        static void Main(string[] args)
        {


            string s = "tree"; //"eert"

            //string s = "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbccaaaaaaaaaaaaa";


           Console.WriteLine( FrequencySort(s));





            Console.ReadLine();

        }
    }
}
